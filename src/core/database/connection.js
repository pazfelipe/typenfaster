import path from 'path'
import {remote} from 'electron'

const filePath = process.env.NODE_ENV === 'development'
  ? process.cwd().concat('/src/core/database')
  : remote.app.getPath('userData')

const knex = require('knex')({
  client: 'sqlite3',
  useNullAsDefault: true,
  connection: {
    filename: path.join(filePath, 'db.sqlite')
  }
})


knex.raw(`
CREATE TABLE IF NOT EXISTS PALAVRAS
(
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  PALAVRA TEXT,
  NIVEL INTEGER,
  TEMPO_ESTIMADO DEFAULT 0,
  ESQUERDA BOOLEAN DEFAULT TRUE
);
`)

knex.raw(`
CREATE TABLE IF NOT EXISTS TECLAS_PALAVRA
(
  ID INTEGER PRIMARY KEY,
  PALAVRA_ID INTEGER,
  TECLAS INTEGER,
  FOREIGN KEY(PALAVRA_ID) REFERENCES PALAVRAS(ID) ON DELETE CASCADE
  );
`)
  .then()

knex.raw(`
CREATE TABLE IF NOT EXISTS LETRAS_DIGITADAS
(
  ID INTEGER PRIMARY KEY,
  PALAVRA_ID INTEGER,
  LETRAS TEXT,
  ERRADAS TEXT,
  FOREIGN KEY(PALAVRA_ID) REFERENCES PALAVRAS(ID) ON DELETE CASCADE
  );
`)
  .then()

knex.raw(`
CREATE TABLE IF NOT EXISTS ESTATISTICAS_PALAVRA
(
  ID INTEGER PRIMARY KEY,
  PALAVRA_ID INTEGER,
  TEMPO INTEGER,
  FOREIGN KEY(PALAVRA_ID) REFERENCES PALAVRAS(ID) ON DELETE CASCADE
  );
`)
  .then()

knex.raw(`
CREATE TABLE IF NOT EXISTS CONFIGURACOES
(
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  NIVEL INTEGER,
  MAO VARCHAR(1) DEFAULT 'A',
  TECLADO_ALFANUMERICO BOOLEAN DEFAULT FALSE,
  MODO_NOTURNO BOOLEAN DEFAULT FALSE,
  MOSTRAR_DICAS BOOLEAN DEFAULT FALSE
  );
`)
  .then()

export default knex